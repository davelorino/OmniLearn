"""bootstrap schema

Revision ID: 900d84907314
Revises: 
Create Date: 2025-04-27 18:49:30.021582

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '900d84907314'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('embedding',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('object_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('object_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('vector', sa.LargeBinary(), nullable=True),
    sa.Column('dim', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interest',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('daily_time_budget', sa.Integer(), nullable=True),
    sa.Column('streak_gate_correct_in_row', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interest_slug'), 'interest', ['slug'], unique=True)
    op.create_table('user',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('interestenrollment',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('interest_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('enrolled_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skillnode',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('interest_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parent_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('depth', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['skillnode.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skillnode_parent_id'), 'skillnode', ['parent_id'], unique=False)
    op.create_table('assessmentitem',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('skill_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('kind', sa.Enum('mcq', 'cloze', 'open', 'flashcard', name='assessmentkind'), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('answer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skillnode.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skillprogress',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('skill_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mastery', sa.Float(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skillnode.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'skill_id')
    )
    op.create_table('attempt',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('item_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ts', sa.DateTime(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('response', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['assessmentitem.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spacedrepcard',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('item_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ease_factor', sa.Float(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.Column('due_on', sa.Date(), nullable=False),
    sa.Column('streak', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['assessmentitem.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('spacedrepcard')
    op.drop_table('attempt')
    op.drop_table('skillprogress')
    op.drop_table('assessmentitem')
    op.drop_index(op.f('ix_skillnode_parent_id'), table_name='skillnode')
    op.drop_table('skillnode')
    op.drop_table('interestenrollment')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_interest_slug'), table_name='interest')
    op.drop_table('interest')
    op.drop_table('embedding')
    # ### end Alembic commands ###
